{"ast":null,"code":"// API NOTIFICATION MESSAGES\nexport const API_NOTIFICATION_MESSAGES = {\n  success: {\n    title: \"Success\",\n    message: \"Data successfully loaded\"\n  },\n  requestFailure: {\n    title: \"Error!\",\n    message: \"An error occured while parsing request data\"\n  },\n  responseFailure: {\n    title: \"Error!\",\n    message: \"An error occured while fetching response from server. Please try again\"\n  },\n  networkError: {\n    title: \"Error!\",\n    message: \"Unable to connect to the server. Please check internet connectivity and try again.\"\n  }\n};\n\n// API SERVICE URL\n// SAMPLE REQUEST\n// NEED SERVICE CALL: { url: \"/\", method: \"POST/GET/PUT/DELETE\" }\nexport const SERVICE_URLS = {\n  uploadFile: {\n    url: '/upload',\n    method: 'POST'\n  },\n  createEmployee: {\n    url: '/create',\n    method: 'POST'\n  },\n  getAllEmployees: {\n    url: '/list',\n    method: 'GET'\n  },\n  getEmployeeById: {\n    url: '/update',\n    method: 'GET',\n    query: true\n  },\n  updateEmployeeById: {\n    url: '/update/employee',\n    method: 'PUT',\n    query: true\n  },\n  deleteEmployee: {\n    url: '/delete',\n    method: 'DELETE',\n    query: true\n  }\n  // userSignup: { url: '/signup', method: 'POST' },\n  // userLogin: { url: '/login', method: 'POST' },\n  // uploadFile: { url: '/file/upload', method: 'POST' },\n  // createPost: { url: '/create', method: 'POST' },\n  // getAllPosts: { url: '/posts', method: 'GET', params: true },\n  // getPostById: { url: '/post', method: 'GET', query: true },\n  // updatePost: { url: '/update', method: 'PUT', query: true },\n  // deletePost: { url: '/delete', method: 'DELETE', query: true },\n  // getAllComments: { url: '/comments', method: 'GET', query: true },\n  // newComment: { url: '/comment/new', method: 'POST' },\n  // deleteComment: { url: '/comment/delete', method: 'DELETE', query: true }\n};","map":{"version":3,"names":["API_NOTIFICATION_MESSAGES","success","title","message","requestFailure","responseFailure","networkError","SERVICE_URLS","uploadFile","url","method","createEmployee","getAllEmployees","getEmployeeById","query","updateEmployeeById","deleteEmployee"],"sources":["C:/Users/hp/Desktop/WebD projects/MERN_MACHINE_TEST/client/src/config.js"],"sourcesContent":["// API NOTIFICATION MESSAGES\r\nexport const API_NOTIFICATION_MESSAGES = {\r\n    success: {\r\n        title: \"Success\",\r\n        message: \"Data successfully loaded\"\r\n    },\r\n    requestFailure: {\r\n        title: \"Error!\",\r\n        message: \"An error occured while parsing request data\"\r\n    },\r\n    responseFailure: {\r\n        title: \"Error!\",\r\n        message: \"An error occured while fetching response from server. Please try again\"\r\n    },\r\n    networkError: {\r\n        title: \"Error!\",\r\n        message: \"Unable to connect to the server. Please check internet connectivity and try again.\"\r\n    }\r\n}\r\n\r\n// API SERVICE URL\r\n// SAMPLE REQUEST\r\n// NEED SERVICE CALL: { url: \"/\", method: \"POST/GET/PUT/DELETE\" }\r\nexport const SERVICE_URLS = {\r\n    uploadFile: { url: '/upload', method: 'POST'},\r\n    createEmployee: {url: '/create', method: 'POST'},\r\n    getAllEmployees: {url: '/list', method: 'GET'},\r\n    getEmployeeById: {url: '/update', method: 'GET', query: true},\r\n    updateEmployeeById: {url: '/update/employee', method: 'PUT', query: true},\r\n    deleteEmployee: {url: '/delete', method: 'DELETE', query: true}\r\n    // userSignup: { url: '/signup', method: 'POST' },\r\n    // userLogin: { url: '/login', method: 'POST' },\r\n    // uploadFile: { url: '/file/upload', method: 'POST' },\r\n    // createPost: { url: '/create', method: 'POST' },\r\n    // getAllPosts: { url: '/posts', method: 'GET', params: true },\r\n    // getPostById: { url: '/post', method: 'GET', query: true },\r\n    // updatePost: { url: '/update', method: 'PUT', query: true },\r\n    // deletePost: { url: '/delete', method: 'DELETE', query: true },\r\n    // getAllComments: { url: '/comments', method: 'GET', query: true },\r\n    // newComment: { url: '/comment/new', method: 'POST' },\r\n    // deleteComment: { url: '/comment/delete', method: 'DELETE', query: true }\r\n}"],"mappings":"AAAA;AACA,OAAO,MAAMA,yBAAyB,GAAG;EACrCC,OAAO,EAAE;IACLC,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAE;EACb,CAAC;EACDC,cAAc,EAAE;IACZF,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE;EACb,CAAC;EACDE,eAAe,EAAE;IACbH,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE;EACb,CAAC;EACDG,YAAY,EAAE;IACVJ,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE;EACb;AACJ,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMI,YAAY,GAAG;EACxBC,UAAU,EAAE;IAAEC,GAAG,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC;EAC7CC,cAAc,EAAE;IAACF,GAAG,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAM,CAAC;EAChDE,eAAe,EAAE;IAACH,GAAG,EAAE,OAAO;IAAEC,MAAM,EAAE;EAAK,CAAC;EAC9CG,eAAe,EAAE;IAACJ,GAAG,EAAE,SAAS;IAAEC,MAAM,EAAE,KAAK;IAAEI,KAAK,EAAE;EAAI,CAAC;EAC7DC,kBAAkB,EAAE;IAACN,GAAG,EAAE,kBAAkB;IAAEC,MAAM,EAAE,KAAK;IAAEI,KAAK,EAAE;EAAI,CAAC;EACzEE,cAAc,EAAE;IAACP,GAAG,EAAE,SAAS;IAAEC,MAAM,EAAE,QAAQ;IAAEI,KAAK,EAAE;EAAI;EAC9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}